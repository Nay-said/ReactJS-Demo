{"version":3,"sources":["components/layout/header.js","components/TodoItem.js","components/Todos.js","components/Add.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","link","Header","style","to","TodoItem","getStyle","borderBottom","textDecoration","props","todo","completed","mark","e","console","log","this","id","title","type","marginRight","onChange","bind","onClick","del","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","key","Add","state","setState","target","name","value","onSubmit","preventDefault","add","display","height","margin","placeholder","flex","pading","className","About","App","axios","delete","then","res","filter","post","data","get","app","exact","path","render","Fragment","maxHeight","overflowY","component","width","marginTop","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f0eb530.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>Todo List</h1>\r\n      <Link to=\"/\" style={link}>Home</Link> | <Link to=\"/about\" style={link}>About</Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '10px'\r\n}\r\n\r\nconst link = {\r\n  color: 'white'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: '#f4f4f4',\r\n      padding: '10px',\r\n      borderBottom: '1px #ccc dotted',\r\n      textDecoration: this.props.todo.completed ?  'line-through' : 'none'\r\n    }\r\n  }\r\n\r\n  mark = (e) => {\r\n    console.log(this.props);\r\n  }\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input type=\"checkbox\" style={{marginRight: '20px'}} onChange={this.props.mark.bind(this, id)} />\r\n          <label>{ title }</label>\r\n          <button onClick={this.props.del.bind(this, id)} style={btnStyle}>X</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  mark: PropTypes.func.isRequired,\r\n  del: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n  background: '#ff0000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '5px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  float: 'right'\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key = {todo.id} todo = {todo} mark = {this.props.mark} del = {this.props.del} />\r\n    ));\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  mark: PropTypes.func.isRequired,\r\n  del: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Add extends Component {\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.add(this.state.title);\r\n    this.setState({ title: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n     <form onSubmit={this.onSubmit} style={{ display: 'flex', height: '36px', margin: '20px auto 30px auto' }}>\r\n       <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.onChange} placeholder=\"Add a to do item\" style={{flex: '10', pading: '10px'}} />\r\n       <input type=\"submit\" value=\"+ Add\" className=\"button\" style={{flex: '1', background: '#555', color: 'white'}} />\r\n     </form>\r\n    )\r\n  }\r\n}\r\n\r\nAdd.propTypes = {\r\n  add: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Add","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <br/>\r\n      <h3>About This App</h3><br/><br/>\r\n\r\n      <p>Personal React JS Pratice Project -- Hengyu Shi</p><br/>\r\n\r\n      <small>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam blanditiis sit reiciendis? Eos nisi quas rerum debitis sed quae non reiciendis illo. Rem eum unde ipsam praesentium distinctio eius natus.</small>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/layout/header';\r\nimport Todos from './components/Todos';\r\nimport Add from './components/Add';\r\nimport About from './pages/About';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=25')\r\n      .then(res => this.setState({ todos: res.data }));\r\n  }\r\n\r\n  mark = (id) => {\r\n    this.setState({ todos: this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    }) });\r\n  }\r\n\r\n  del = (id) => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\r\n  }\r\n\r\n  add = (title) => {\r\n    axios.post('https://jsonplaceholder.typicode.com/todos', { title, completed: false})\r\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\" style={app}>\r\n          <Header />\r\n          <Route exact path=\"/\" render={props => (\r\n            <React.Fragment>\r\n              <Add add={this.add} />\r\n              <div style={{ maxHeight: '600px', overflowY: 'scroll' }}>\r\n                <Todos todos = { this.state.todos } mark={this.mark} del={this.del} />\r\n              </div>\r\n            </React.Fragment>\r\n          )} />\r\n          <Route path=\"/about\" component={About} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst app = {\r\n  width: '50%',\r\n  margin: '0 auto',\r\n  marginTop: '20px'\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}